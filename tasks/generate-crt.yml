---
- name: Install letsencrypt config
  template:
    src: cli.ini.j2
    dest: /etc/letsencrypt/cli.ini
    owner: root
    group: root
    mode: 0640

- name: Check to see if cert has been generated
  stat:
    path: "{{ certificate_path }}/{{ subdomain }}.{{ domain }}/cert.pem"
  register: cert_exists

- block:
    - block:
        - name: Check to see when cert expires
          shell: "echo $((($(date --date \"$(date --date \"$(openssl x509 -in {{ certificate_path }}/{{ subdomain }}.{{ domain }}/cert.pem -noout -enddate | sed -n 's/notAfter=//p')\")\" +%s)-$(date --date now +%s))/86400))"
          register: days_remaining

        - name: Print days_remaining
          debug:
            msg: "Certificate will expire in {{ days_remaining.stdout | int }} days"

        - name: Set cert_expiring_soon var
          set_fact:
            cert_expiring_soon: yes
          when: ( "{{ days_remaining.stdout | int  <  renew_days | int }}" )

      when: cert_exists.stat.exists

    - block:
        - name: Set force_renew_command
          set_fact:
            force_renew_command: "--force-renewal"
          when: ( "{{ force_renewal }}" is defined )

        - name: Set force renewal fact
          set_fact:
            force_renew: "{{ force_renew_command | default('') }}"

        - name: Set installer_command fact
          set_fact:
            installer_command: "--installer"
          when: ( "{{ server_type }}" is defined)

        - name: Set installer_server_type
          set_fact:
            installer_server_type: "{{ installer_command | default ('') }} {{ server_type | default('') }}"

        - name: Generate certificate (Standalone) no install
          command: "letsencrypt {{ force_renew }} {{ installer_server_type }} --agree-tos certonly -d {{ subdomain }}.{{ domain }}"
          when: not cert_exists.stat.exists

        - name: Generate certificate (Standalone) no install
          command: "letsencrypt {{ force_renew }} {{ installer_server_type }} --agree-tos certonly -d {{ subdomain }}.{{ domain }}"
          when: cert_exists.stat.exists and ( "{{ cert_expiring_soon }}" is defined )

        - name: Generate certificate (Standalone) no install
          command: "letsencrypt {{ force_renew }} {{ installer_server_type }} --agree-tos certonly -d {{ subdomain }}.{{ domain }}"
          when: cert_exists.stat.exists and ( "{{ force_renewal }}" is defined )

      when: ( "{{ authenticator }}" == "standalone" )
  when: ( "{{ revoke }}" is not defined )

- name: Revoke certificate
  command: "letsencrypt revoke --cert-path {{ certificate_path }}/{{ subdomain }}.{{ domain }}/cert.pem"
  when: cert_exists.stat.exists and ( "{{ revoke }}" is defined )
